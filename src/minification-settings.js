'use strict';

/**
 * @file    Defines shared constant variables
 * @author  TheJaredWilcurt
 */

// Default options for minification which the user can override
const jsMinificationDefaults = {};
const cssMinificationDefaults = {};
const htmlMinificationDefaults = {
  caseSensitive: true,
  collapseWhitespace: true,
  conservativeCollapse: true,
  html5: true,
  includeAutoGeneratedTags: true,
  minifyCSS: {
    ...cssMinificationDefaults
  },
  minifyJS: true,
  removeComments: true
};

// These are minification settings that override the user's settings to prevent bugs in Red Perfume
const jsMinificationOverrides = {};
const cssMinificationOverrides = {
  returnPromise: false
};
const htmlMinificationOverrides = {};


/**
 * Creates an object of API settings for Terser's minification.
 *
 * @param  {object} userOptions  The Terser settings passed in by the user
 * @return {object}              Red Perfume's defaults + User options + overrides to prevent bugs
 */
function generateJsMinificationOptions (userOptions) {
  if (userOptions === true) {
    return {
      ...jsMinificationDefaults,
      ...jsMinificationOverrides
    };
  }

  if (
    !userOptions ||
    typeof(userOptions) !== 'object' ||
    Array.isArray(userOptions)
  ) {
    return false;
  }

  return {
    ...jsMinificationDefaults,
    ...userOptions,
    ...jsMinificationOverrides
  };
}

/**
 * Creates an object of API settings for Clean-CSS's minification.
 *
 * @param  {object} userOptions  The Clean-CSS settings passed in by the user
 * @return {object}              Red Perfume's defaults + User options + overrides to prevent bugs
 */
function generateCssMinificationOptions (userOptions) {
  if (userOptions === true) {
    return {
      ...cssMinificationDefaults,
      ...cssMinificationOverrides
    };
  }

  if (
    !userOptions ||
    typeof(userOptions) !== 'object' ||
    Array.isArray(userOptions)
  ) {
    return false;
  }

  return {
    ...cssMinificationDefaults,
    ...userOptions,
    ...cssMinificationOverrides
  };
}

/**
 * Creates an object of API settings for HTML-Minifier-Terser's minification.
 *
 * @param  {object} userOptions  The HTML-Minifier-Terser settings passed in by the user
 * @return {object}              Red Perfume's defaults + User options + overrides to prevent bugs
 */
function generateHtmlMinificationOptions (userOptions) {
  if (userOptions === true) {
    return {
      ...htmlMinificationDefaults,
      ...htmlMinificationOverrides,
      minifyCss: generateCssMinificationOptions(true),
      minifyJs: generateJsMinificationOptions(true)
    };
  }

  if (
    !userOptions ||
    typeof(userOptions) !== 'object' ||
    Array.isArray(userOptions)
  ) {
    return false;
  }

  return {
    ...htmlMinificationDefaults,
    ...userOptions,
    ...htmlMinificationOverrides,
    minifyCss: generateCssMinificationOptions(userOptions.minifyCSS),
    minifyJs: generateJsMinificationOptions(userOptions.minifyJS)
  };
}

module.exports = {
  generateJsMinificationOptions,
  generateCssMinificationOptions,
  generateHtmlMinificationOptions
};
